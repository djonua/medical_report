# 🏥 Медицинский диктофон с автоматической генерацией заключений

Приложение для автоматической записи и расшифровки медицинских консультаций с последующей генерацией заключений в формате DOCX.

## ✨ Возможности

- 🎤 Запись аудио консультаций с автоматическим распознаванием речи
- 👥 Определение говорящего (врач/пациент)
- 📝 Автоматическая генерация медицинских заключений на основе диалога
- 💾 Сохранение заключений в форматах JSON и DOCX
- 👨‍⚕️ Поддержка разных специализаций врачей
- 📊 История пациентов
- 🖥️ Удобный пользовательский интерфейс

## 🔧 Требования

- 🐍 Python 3.8 или выше
- 💻 Windows/Linux/MacOS
- 🎙️ Микрофон
- 🌐 Доступ к интернету

## 🚀 Установка

1. Клонируйте репозиторий:
```bash
git clone https://github.com/yourusername/MedicalReportGenerator.git
cd MedicalReportGenerator
```

2. Установите зависимости:
```bash
pip install -r requirements.txt
```

3. Настройте переменные окружения:
```bash
export GOOGLE_APPLICATION_CREDENTIALS="путь/к/вашему/google-credentials.json"
export OPENAI_API_KEY="ваш-openai-api-ключ"
```

## 📱 Использование

1. Запустите приложение:
```bash
python main.py
```

2. В открывшемся окне:
   - 👨‍⚕️ Выберите врача из списка или добавьте нового
   - 👤 Введите ФИО пациента или выберите из истории
   - ▶️ Нажмите "Начать прием" для начала записи
   - 🗣️ Говорите в микрофон (приложение автоматически определит врача и пациента)
   - ⏹️ Нажмите "Завершить прием" для остановки записи
   - ⌛ Дождитесь генерации заключения
   - 📄 Нажмите на появившуюся ссылку для открытия заключения

3. Результаты сохраняются в:
   - 🎵 `audio_records/` - текстовые транскрипты приема
   - 📊 `Results/` - сгенерированные заключения в формате JSON
   - 📑 `Reports/` - медицинские заключения в формате DOCX

## 📂 Структура проекта

- 🎯 `main.py` - основной файл приложения с GUI
- 🤖 `chatgpt.py` - интеграция с OpenAI API
- 📄 `report_generator.py` - генерация DOCX отчетов
- 🛠️ `services/`
  - 🎤 `audio_service.py` - сервис записи и распознавания речи
  - 💾 `storage_service.py` - сервис хранения данных
- 📦 `models/`
  - 👨‍⚕️ `doctor.py` - модель данных врача
- 🎨 `gui/`
  - 💬 `dialogs.py` - диалоговые окна
  - 🖼️ `frames.py` - компоненты интерфейса
- 📋 `templates/` - шаблоны для разных специализаций
- 📝 `requirements.txt` - зависимости проекта

## ☁️ Настройка Google Cloud

1. 🌟 Создайте проект в [Google Cloud Console](https://console.cloud.google.com)
2. 🎯 Включите Speech-to-Text API
3. 🔑 Создайте сервисный аккаунт и скачайте ключ в формате JSON
4. ⚙️ Укажите путь к файлу ключа в переменной окружения

## 🤖 Настройка OpenAI

1. 👤 Создайте аккаунт на [OpenAI Platform](https://platform.openai.com)
2. 🔑 Получите API ключ
3. ⚙️ Укажите ключ в переменной окружения

## 🔍 Особенности работы

- ⚡ Распознавание речи работает в режиме реального времени
- 🔄 Промежуточные результаты отображаются серым цветом
- 🎨 Финальный текст врача отображается синим, пациента - зеленым
- 💾 В файл сохраняются только финальные результаты распознавания
- 📄 Заключения создаются в формате DOCX с указанием ФИО пациента и даты
- 🎯 Поддерживается автоматическое определение говорящего

## 🔒 Безопасность

- 🔐 Все данные хранятся локально
- ⚙️ Используйте переменные окружения для конфиденциальных данных

## 📜 Лицензия

MIT License. См. файл `LICENSE` для деталей.
